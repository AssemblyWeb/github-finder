[{"/Users/spacegray/Documents/github-finder/src/index.js":"1","/Users/spacegray/Documents/github-finder/src/App.js":"2","/Users/spacegray/Documents/github-finder/src/reportWebVitals.js":"3","/Users/spacegray/Documents/github-finder/src/components/layout/Navbar.js":"4","/Users/spacegray/Documents/github-finder/src/components/users/userItem.js":"5","/Users/spacegray/Documents/github-finder/src/components/users/UserItem.js":"6","/Users/spacegray/Documents/github-finder/src/components/users/Users.js":"7","/Users/spacegray/Documents/github-finder/src/components/layout/Spinner.js":"8","/Users/spacegray/Documents/github-finder/src/components/users/Search.js":"9","/Users/spacegray/Documents/github-finder/src/components/layout/Alert.js":"10","/Users/spacegray/Documents/github-finder/src/components/pages/About.js":"11","/Users/spacegray/Documents/github-finder/src/components/users/User.js":"12","/Users/spacegray/Documents/github-finder/src/components/repos/Repos.js":"13","/Users/spacegray/Documents/github-finder/src/components/repos/RepoItem.js":"14"},{"size":503,"mtime":1612056098639,"results":"15","hashOfConfig":"16"},{"size":3431,"mtime":1612407760767,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612055201008,"results":"18","hashOfConfig":"16"},{"size":671,"mtime":1612231704438,"results":"19","hashOfConfig":"16"},{"size":532,"mtime":1612098223402,"results":"20","hashOfConfig":"16"},{"size":585,"mtime":1612266535351,"results":"21","hashOfConfig":"16"},{"size":672,"mtime":1612385513126,"results":"22","hashOfConfig":"16"},{"size":301,"mtime":1612099599590,"results":"23","hashOfConfig":"16"},{"size":1235,"mtime":1612406296405,"results":"24","hashOfConfig":"16"},{"size":277,"mtime":1612229193330,"results":"25","hashOfConfig":"16"},{"size":259,"mtime":1612231395865,"results":"26","hashOfConfig":"16"},{"size":3600,"mtime":1612406714259,"results":"27","hashOfConfig":"16"},{"size":285,"mtime":1612387787787,"results":"28","hashOfConfig":"16"},{"size":341,"mtime":1612387848093,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pfh7lc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/spacegray/Documents/github-finder/src/index.js",[],["60","61"],"/Users/spacegray/Documents/github-finder/src/App.js",[],"/Users/spacegray/Documents/github-finder/src/reportWebVitals.js",[],"/Users/spacegray/Documents/github-finder/src/components/layout/Navbar.js",[],"/Users/spacegray/Documents/github-finder/src/components/users/userItem.js",[],"/Users/spacegray/Documents/github-finder/src/components/users/UserItem.js",[],"/Users/spacegray/Documents/github-finder/src/components/users/Users.js",[],"/Users/spacegray/Documents/github-finder/src/components/layout/Spinner.js",[],"/Users/spacegray/Documents/github-finder/src/components/users/Search.js",[],"/Users/spacegray/Documents/github-finder/src/components/layout/Alert.js",[],"/Users/spacegray/Documents/github-finder/src/components/pages/About.js",[],"/Users/spacegray/Documents/github-finder/src/components/users/User.js",["62"],"import React, { useEffect, Fragment } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport Repos from '../repos/Repos';\n\nconst User = ({user, loading, getUser, getUserRepos, repos, match}) => {\n    // componentDidMount(){\n        // }\n        \n    useEffect(() => {\n        getUser(this.props.match.params.login);\n        getUserRepos(this.props.match.params.login);\n    }, []);\n\n        const {\n            name,\n            avatar_url,\n            location,\n            bio,\n            company,\n            blog,\n            login,\n            html_user,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = this.props.user;\n\n        if(loading){\n            return(\n                <Spinner />\n            )\n        }else{\n            return (\n                <Fragment>\n                    <Link to=\"/\" className=\"btn btn-light\">Back to search</Link>\n                    {hireable ? (<span><i className=\"fas fa-check text-success\"/> Hireable</span>) : ( <span><i className=\"fas fa-times-circle text-danger\"/> Not hireable</span> )}\n                    <div className=\"card grid-2\">\n                        <div className=\"all-center\">\n                            <img src={avatar_url} alt={name} style={{width: '150px'}}/>\n                            <h1>{name}</h1>\n                            <p>Location: {location}</p>\n                        </div>\n                        <div>\n                            {bio && (\n                                <Fragment>\n                                    <h3>Bio</h3>\n                                    <p>{bio}</p>\n                                </Fragment>\n                            )}\n                            <a href={html_user} className=\"btn btn-dark my-1\">Visit Github profile</a>\n                            <ul>\n                                <li>\n                                    {login && <Fragment>\n                                        <strong>Username: </strong> {login}\n                                        </Fragment>}\n                                </li>\n                                <li>\n                                    {company && <Fragment>\n                                        <strong>Company: </strong> {company}\n                                        </Fragment>}\n                                </li>\n                                <li>\n                                    {blog && <Fragment>\n                                        <strong>Website: </strong> {blog}\n                                        </Fragment>}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"card text-center\">\n                        <div className=\"badge badge-primary\">Followers: {followers}</div>\n                        <div className=\"badge badge-success\">following: {following}</div>\n                        <div className=\"badge badge-light\">Public repos: {public_repos}</div>\n                        <div className=\"badge badge-dark\">Public gists: {public_gists}</div>\n                    </div>\n\n                    <Repos repos={repos}/>\n                </Fragment>\n            )\n        }\n}\n\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    trpod: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired,\n}\n\nexport default User\n","/Users/spacegray/Documents/github-finder/src/components/repos/Repos.js",[],"/Users/spacegray/Documents/github-finder/src/components/repos/RepoItem.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":14,"column":8,"nodeType":"69","endLine":14,"endColumn":10,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser' and 'getUserRepos'. Either include them or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [getUser, getUserRepos]",{"range":"76","text":"77"},[459,461],"[getUser, getUserRepos]"]